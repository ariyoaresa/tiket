<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Sign Up - Tiket</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body class="auth-page">
  <div class="page-container">
    <div class="auth-container">
      <div class="auth-card">
        <div class="auth-header">
          <a href="/" class="brand">Tiket</a>
          <h1>Create Account</h1>
          <p>Join thousands of teams using Tiket</p>
        </div>
        
        <div id="toast-container"></div>
        
        <form id="signupForm" class="auth-form">
          <div class="form-group">
            <label for="name">Full Name</label>
            <input type="text" id="name" name="name" required placeholder="Enter your full name">
            <div class="error-message" id="name-error"></div>
          </div>
          
          <div class="form-group">
            <label for="email">Email Address</label>
            <input type="email" id="email" name="email" required placeholder="Enter your email">
            <div class="error-message" id="email-error"></div>
          </div>
          
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" required placeholder="Create a password">
            <div class="error-message" id="password-error"></div>
            <small class="form-hint">Password must be at least 6 characters long</small>
          </div>
          
          <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input type="password" id="confirmPassword" name="confirmPassword" required placeholder="Confirm your password">
            <div class="error-message" id="confirmPassword-error"></div>
          </div>
          
          <button type="submit" class="button primary full-width" id="signupBtn">
            <span class="btn-text">Create Account</span>
            <span class="btn-loading" style="display: none;">Creating account...</span>
          </button>
        </form>
        
        <div class="auth-footer">
          <p>Already have an account? <a href="/auth/login">Sign in</a></p>
        </div>
      </div>
      
      <!-- Decorative elements -->
      <div class="decorative-circle circle-auth-1"></div>
      <div class="decorative-circle circle-auth-2"></div>
    </div>
  </div>

  <script>
    document.getElementById('signupForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const btn = document.getElementById('signupBtn');
      const btnText = btn.querySelector('.btn-text');
      const btnLoading = btn.querySelector('.btn-loading');
      
      // Clear previous errors
      document.querySelectorAll('.error-message').forEach(el => el.textContent = '');
      clearToasts();
      
      // Get form data
      const formData = new FormData(this);
      const name = formData.get('name');
      const email = formData.get('email');
      const password = formData.get('password');
      const confirmPassword = formData.get('confirmPassword');
      
      // Client-side validation
      let hasErrors = false;
      
      if (!name || name.trim().length < 2) {
        showFieldError('name-error', 'Name must be at least 2 characters long');
        hasErrors = true;
      }
      
      if (!email) {
        showFieldError('email-error', 'Email is required');
        hasErrors = true;
      } else if (!isValidEmail(email)) {
        showFieldError('email-error', 'Please enter a valid email address');
        hasErrors = true;
      }
      
      if (!password) {
        showFieldError('password-error', 'Password is required');
        hasErrors = true;
      } else if (password.length < 6) {
        showFieldError('password-error', 'Password must be at least 6 characters long');
        hasErrors = true;
      }
      
      if (!confirmPassword) {
        showFieldError('confirmPassword-error', 'Please confirm your password');
        hasErrors = true;
      } else if (password !== confirmPassword) {
        showFieldError('confirmPassword-error', 'Passwords do not match');
        hasErrors = true;
      }
      
      if (hasErrors) return;
      
      // Show loading state
      btn.disabled = true;
      btnText.style.display = 'none';
      btnLoading.style.display = 'inline';
      
      try {
        const response = await fetch('/auth/signup', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ name, email, password })
        });
        
        const result = await response.json();
        
        if (result.success) {
          showToast('Account created successfully! Redirecting...', 'success');
          setTimeout(() => {
            window.location.href = result.redirect;
          }, 1000);
        } else {
          showToast(result.message || 'Signup failed. Please try again.', 'error');
        }
      } catch (error) {
        showToast('Network error. Please check your connection and try again.', 'error');
      } finally {
        // Reset button state
        btn.disabled = false;
        btnText.style.display = 'inline';
        btnLoading.style.display = 'none';
      }
    });
    
    function isValidEmail(email) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }
    
    function showFieldError(elementId, message) {
      document.getElementById(elementId).textContent = message;
    }
    
    function showToast(message, type = 'info') {
      const container = document.getElementById('toast-container');
      const toast = document.createElement('div');
      toast.className = `toast toast-${type}`;
      toast.textContent = message;
      
      container.appendChild(toast);
      
      // Trigger animation
      setTimeout(() => toast.classList.add('show'), 100);
      
      // Auto remove
      setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => container.removeChild(toast), 300);
      }, 4000);
    }
    
    function clearToasts() {
      document.getElementById('toast-container').innerHTML = '';
    }
  </script>
</body>
</html>